// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.25.1
// source: geister_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Piece struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner     string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	PieceType string   `protobuf:"bytes,2,opt,name=piece_type,json=pieceType,proto3" json:"piece_type,omitempty"`
	Position  []uint32 `protobuf:"varint,3,rep,packed,name=position,proto3" json:"position,omitempty"`
}

func (x *Piece) Reset() {
	*x = Piece{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Piece) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Piece) ProtoMessage() {}

func (x *Piece) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Piece.ProtoReflect.Descriptor instead.
func (*Piece) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{0}
}

func (x *Piece) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Piece) GetPieceType() string {
	if x != nil {
		return x.PieceType
	}
	return ""
}

func (x *Piece) GetPosition() []uint32 {
	if x != nil {
		return x.Position
	}
	return nil
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerUuid            string            `protobuf:"bytes,1,opt,name=player_uuid,json=playerUuid,proto3" json:"player_uuid,omitempty"`
	Name                  string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pieces                map[string]*Piece `protobuf:"bytes,3,rep,name=pieces,proto3" json:"pieces,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PickedRedPiecesCount  uint32            `protobuf:"varint,4,opt,name=pickedRedPiecesCount,proto3" json:"pickedRedPiecesCount,omitempty"`
	PickedBluePiecesCount uint32            `protobuf:"varint,5,opt,name=pickedBluePiecesCount,proto3" json:"pickedBluePiecesCount,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{1}
}

func (x *Player) GetPlayerUuid() string {
	if x != nil {
		return x.PlayerUuid
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetPieces() map[string]*Piece {
	if x != nil {
		return x.Pieces
	}
	return nil
}

func (x *Player) GetPickedRedPiecesCount() uint32 {
	if x != nil {
		return x.PickedRedPiecesCount
	}
	return 0
}

func (x *Player) GetPickedBluePiecesCount() uint32 {
	if x != nil {
		return x.PickedBluePiecesCount
	}
	return 0
}

type Block struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address []uint32 `protobuf:"varint,1,rep,packed,name=address,proto3" json:"address,omitempty"`
	Piece   *Piece   `protobuf:"bytes,2,opt,name=piece,proto3,oneof" json:"piece,omitempty"`
}

func (x *Block) Reset() {
	*x = Block{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{2}
}

func (x *Block) GetAddress() []uint32 {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Block) GetPiece() *Piece {
	if x != nil {
		return x.Piece
	}
	return nil
}

type BlockRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Blocks []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *BlockRow) Reset() {
	*x = BlockRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRow) ProtoMessage() {}

func (x *BlockRow) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRow.ProtoReflect.Descriptor instead.
func (*BlockRow) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{3}
}

func (x *BlockRow) GetBlocks() []*Block {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableUuid string      `protobuf:"bytes,1,opt,name=table_uuid,json=tableUuid,proto3" json:"table_uuid,omitempty"`
	Players   []*Player   `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	Board     []*BlockRow `protobuf:"bytes,3,rep,name=board,proto3" json:"board,omitempty"`
	Turn      uint32      `protobuf:"varint,4,opt,name=turn,proto3" json:"turn,omitempty"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{4}
}

func (x *Table) GetTableUuid() string {
	if x != nil {
		return x.TableUuid
	}
	return ""
}

func (x *Table) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *Table) GetBoard() []*BlockRow {
	if x != nil {
		return x.Board
	}
	return nil
}

func (x *Table) GetTurn() uint32 {
	if x != nil {
		return x.Turn
	}
	return 0
}

type StartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player1Name string `protobuf:"bytes,1,opt,name=player1_name,json=player1Name,proto3" json:"player1_name,omitempty"`
	Player2Name string `protobuf:"bytes,2,opt,name=player2_name,json=player2Name,proto3" json:"player2_name,omitempty"`
}

func (x *StartRequest) Reset() {
	*x = StartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRequest) ProtoMessage() {}

func (x *StartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRequest.ProtoReflect.Descriptor instead.
func (*StartRequest) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{5}
}

func (x *StartRequest) GetPlayer1Name() string {
	if x != nil {
		return x.Player1Name
	}
	return ""
}

func (x *StartRequest) GetPlayer2Name() string {
	if x != nil {
		return x.Player2Name
	}
	return ""
}

type StartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameState *Table `protobuf:"bytes,1,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"`
}

func (x *StartResponse) Reset() {
	*x = StartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartResponse) ProtoMessage() {}

func (x *StartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartResponse.ProtoReflect.Descriptor instead.
func (*StartResponse) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{6}
}

func (x *StartResponse) GetGameState() *Table {
	if x != nil {
		return x.GameState
	}
	return nil
}

type NotifyGamePreparationCompleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameState *Table `protobuf:"bytes,1,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"`
}

func (x *NotifyGamePreparationCompleteRequest) Reset() {
	*x = NotifyGamePreparationCompleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGamePreparationCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGamePreparationCompleteRequest) ProtoMessage() {}

func (x *NotifyGamePreparationCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGamePreparationCompleteRequest.ProtoReflect.Descriptor instead.
func (*NotifyGamePreparationCompleteRequest) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{7}
}

func (x *NotifyGamePreparationCompleteRequest) GetGameState() *Table {
	if x != nil {
		return x.GameState
	}
	return nil
}

type NotifyGamePreparationCompleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableUuid string `protobuf:"bytes,1,opt,name=table_uuid,json=tableUuid,proto3" json:"table_uuid,omitempty"`
}

func (x *NotifyGamePreparationCompleteResponse) Reset() {
	*x = NotifyGamePreparationCompleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyGamePreparationCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyGamePreparationCompleteResponse) ProtoMessage() {}

func (x *NotifyGamePreparationCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyGamePreparationCompleteResponse.ProtoReflect.Descriptor instead.
func (*NotifyGamePreparationCompleteResponse) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{8}
}

func (x *NotifyGamePreparationCompleteResponse) GetTableUuid() string {
	if x != nil {
		return x.TableUuid
	}
	return ""
}

type GetGameStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableUuid string `protobuf:"bytes,1,opt,name=table_uuid,json=tableUuid,proto3" json:"table_uuid,omitempty"`
}

func (x *GetGameStateRequest) Reset() {
	*x = GetGameStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameStateRequest) ProtoMessage() {}

func (x *GetGameStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameStateRequest.ProtoReflect.Descriptor instead.
func (*GetGameStateRequest) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetGameStateRequest) GetTableUuid() string {
	if x != nil {
		return x.TableUuid
	}
	return ""
}

type GetGameStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameState *Table `protobuf:"bytes,1,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"`
}

func (x *GetGameStateResponse) Reset() {
	*x = GetGameStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGameStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGameStateResponse) ProtoMessage() {}

func (x *GetGameStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGameStateResponse.ProtoReflect.Descriptor instead.
func (*GetGameStateResponse) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetGameStateResponse) GetGameState() *Table {
	if x != nil {
		return x.GameState
	}
	return nil
}

type UpdateGameStateByPlayerMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableUuid string `protobuf:"bytes,1,opt,name=table_uuid,json=tableUuid,proto3" json:"table_uuid,omitempty"`
	PieceKey  string `protobuf:"bytes,2,opt,name=piece_key,json=pieceKey,proto3" json:"piece_key,omitempty"`
	Dest      *Block `protobuf:"bytes,3,opt,name=dest,proto3" json:"dest,omitempty"`
}

func (x *UpdateGameStateByPlayerMoveRequest) Reset() {
	*x = UpdateGameStateByPlayerMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameStateByPlayerMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameStateByPlayerMoveRequest) ProtoMessage() {}

func (x *UpdateGameStateByPlayerMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameStateByPlayerMoveRequest.ProtoReflect.Descriptor instead.
func (*UpdateGameStateByPlayerMoveRequest) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateGameStateByPlayerMoveRequest) GetTableUuid() string {
	if x != nil {
		return x.TableUuid
	}
	return ""
}

func (x *UpdateGameStateByPlayerMoveRequest) GetPieceKey() string {
	if x != nil {
		return x.PieceKey
	}
	return ""
}

func (x *UpdateGameStateByPlayerMoveRequest) GetDest() *Block {
	if x != nil {
		return x.Dest
	}
	return nil
}

type UpdateGameStateByPlayerMoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGameStateByPlayerMoveResponse) Reset() {
	*x = UpdateGameStateByPlayerMoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameStateByPlayerMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameStateByPlayerMoveResponse) ProtoMessage() {}

func (x *UpdateGameStateByPlayerMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameStateByPlayerMoveResponse.ProtoReflect.Descriptor instead.
func (*UpdateGameStateByPlayerMoveResponse) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{12}
}

type UpdateGameStateByCpuMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableUuid string `protobuf:"bytes,1,opt,name=table_uuid,json=tableUuid,proto3" json:"table_uuid,omitempty"`
}

func (x *UpdateGameStateByCpuMoveRequest) Reset() {
	*x = UpdateGameStateByCpuMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameStateByCpuMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameStateByCpuMoveRequest) ProtoMessage() {}

func (x *UpdateGameStateByCpuMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameStateByCpuMoveRequest.ProtoReflect.Descriptor instead.
func (*UpdateGameStateByCpuMoveRequest) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateGameStateByCpuMoveRequest) GetTableUuid() string {
	if x != nil {
		return x.TableUuid
	}
	return ""
}

type UpdateGameStateByCpuMoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateGameStateByCpuMoveResponse) Reset() {
	*x = UpdateGameStateByCpuMoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateGameStateByCpuMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateGameStateByCpuMoveResponse) ProtoMessage() {}

func (x *UpdateGameStateByCpuMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateGameStateByCpuMoveResponse.ProtoReflect.Descriptor instead.
func (*UpdateGameStateByCpuMoveResponse) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{14}
}

type DeleteGameStateWhenGameIsOverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableUuid string `protobuf:"bytes,1,opt,name=table_uuid,json=tableUuid,proto3" json:"table_uuid,omitempty"`
}

func (x *DeleteGameStateWhenGameIsOverRequest) Reset() {
	*x = DeleteGameStateWhenGameIsOverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGameStateWhenGameIsOverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGameStateWhenGameIsOverRequest) ProtoMessage() {}

func (x *DeleteGameStateWhenGameIsOverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGameStateWhenGameIsOverRequest.ProtoReflect.Descriptor instead.
func (*DeleteGameStateWhenGameIsOverRequest) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteGameStateWhenGameIsOverRequest) GetTableUuid() string {
	if x != nil {
		return x.TableUuid
	}
	return ""
}

type DeleteGameStateWhenGameIsOverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteGameStateWhenGameIsOverResponse) Reset() {
	*x = DeleteGameStateWhenGameIsOverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_geister_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteGameStateWhenGameIsOverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteGameStateWhenGameIsOverResponse) ProtoMessage() {}

func (x *DeleteGameStateWhenGameIsOverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_geister_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteGameStateWhenGameIsOverResponse.ProtoReflect.Descriptor instead.
func (*DeleteGameStateWhenGameIsOverResponse) Descriptor() ([]byte, []int) {
	return file_geister_service_proto_rawDescGZIP(), []int{16}
}

var File_geister_service_proto protoreflect.FileDescriptor

var file_geister_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x67, 0x65, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x05, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x69, 0x65, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x97, 0x02, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x55, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x69, 0x65, 0x63, 0x65, 0x73, 0x12, 0x32,
	0x0a, 0x14, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x64, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x14, 0x70, 0x69,
	0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x64, 0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x34, 0x0a, 0x15, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x6c, 0x75, 0x65,
	0x50, 0x69, 0x65, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x15, 0x70, 0x69, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x6c, 0x75, 0x65, 0x50, 0x69, 0x65,
	0x63, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x41, 0x0a, 0x0b, 0x50, 0x69, 0x65, 0x63,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x50, 0x69, 0x65, 0x63, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4e, 0x0a, 0x05, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21,
	0x0a, 0x05, 0x70, 0x69, 0x65, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x50, 0x69, 0x65, 0x63, 0x65, 0x48, 0x00, 0x52, 0x05, 0x70, 0x69, 0x65, 0x63, 0x65, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x22, 0x2a, 0x0a, 0x08, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x77, 0x12, 0x1e, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x7e, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x77, 0x52, 0x05, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x74, 0x75, 0x72, 0x6e, 0x22, 0x54, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x31, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x31, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x32, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x32, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a,
	0x0d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25,
	0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x06, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x4d, 0x0a, 0x24, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47,
	0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a,
	0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x22, 0x46, 0x0a, 0x25, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61,
	0x6d, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x75,
	0x69, 0x64, 0x22, 0x3d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x7c, 0x0a, 0x22, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x65, 0x63, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x22,
	0x25, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x1f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x43, 0x70, 0x75, 0x4d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x43, 0x70, 0x75,
	0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a, 0x24,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x57,
	0x68, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x25, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x73,
	0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xa0, 0x04, 0x0a,
	0x0e, 0x47, 0x65, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x26, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x0d, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0e, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6e, 0x0a, 0x1d, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x65, 0x70,
	0x61, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d,
	0x6f, 0x76, 0x65, 0x12, 0x23, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x43, 0x70, 0x75, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x20, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79, 0x43, 0x70,
	0x75, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x43, 0x70, 0x75, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x6e, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x73, 0x4f, 0x76, 0x65, 0x72,
	0x12, 0x25, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x49, 0x73, 0x4f, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x57, 0x68, 0x65, 0x6e, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x73, 0x4f, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x13, 0x5a, 0x11, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_geister_service_proto_rawDescOnce sync.Once
	file_geister_service_proto_rawDescData = file_geister_service_proto_rawDesc
)

func file_geister_service_proto_rawDescGZIP() []byte {
	file_geister_service_proto_rawDescOnce.Do(func() {
		file_geister_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_geister_service_proto_rawDescData)
	})
	return file_geister_service_proto_rawDescData
}

var file_geister_service_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_geister_service_proto_goTypes = []interface{}{
	(*Piece)(nil),         // 0: Piece
	(*Player)(nil),        // 1: Player
	(*Block)(nil),         // 2: Block
	(*BlockRow)(nil),      // 3: BlockRow
	(*Table)(nil),         // 4: Table
	(*StartRequest)(nil),  // 5: StartRequest
	(*StartResponse)(nil), // 6: StartResponse
	(*NotifyGamePreparationCompleteRequest)(nil),  // 7: NotifyGamePreparationCompleteRequest
	(*NotifyGamePreparationCompleteResponse)(nil), // 8: NotifyGamePreparationCompleteResponse
	(*GetGameStateRequest)(nil),                   // 9: GetGameStateRequest
	(*GetGameStateResponse)(nil),                  // 10: GetGameStateResponse
	(*UpdateGameStateByPlayerMoveRequest)(nil),    // 11: UpdateGameStateByPlayerMoveRequest
	(*UpdateGameStateByPlayerMoveResponse)(nil),   // 12: UpdateGameStateByPlayerMoveResponse
	(*UpdateGameStateByCpuMoveRequest)(nil),       // 13: UpdateGameStateByCpuMoveRequest
	(*UpdateGameStateByCpuMoveResponse)(nil),      // 14: UpdateGameStateByCpuMoveResponse
	(*DeleteGameStateWhenGameIsOverRequest)(nil),  // 15: DeleteGameStateWhenGameIsOverRequest
	(*DeleteGameStateWhenGameIsOverResponse)(nil), // 16: DeleteGameStateWhenGameIsOverResponse
	nil, // 17: Player.PiecesEntry
}
var file_geister_service_proto_depIdxs = []int32{
	17, // 0: Player.pieces:type_name -> Player.PiecesEntry
	0,  // 1: Block.piece:type_name -> Piece
	2,  // 2: BlockRow.blocks:type_name -> Block
	1,  // 3: Table.players:type_name -> Player
	3,  // 4: Table.board:type_name -> BlockRow
	4,  // 5: StartResponse.game_state:type_name -> Table
	4,  // 6: NotifyGamePreparationCompleteRequest.game_state:type_name -> Table
	4,  // 7: GetGameStateResponse.game_state:type_name -> Table
	2,  // 8: UpdateGameStateByPlayerMoveRequest.dest:type_name -> Block
	0,  // 9: Player.PiecesEntry.value:type_name -> Piece
	5,  // 10: GeisterService.Start:input_type -> StartRequest
	7,  // 11: GeisterService.NotifyGamePreparationComplete:input_type -> NotifyGamePreparationCompleteRequest
	9,  // 12: GeisterService.GetGameState:input_type -> GetGameStateRequest
	11, // 13: GeisterService.UpdateGameStateByPlayerMove:input_type -> UpdateGameStateByPlayerMoveRequest
	13, // 14: GeisterService.UpdateGameStateByCpuMove:input_type -> UpdateGameStateByCpuMoveRequest
	15, // 15: GeisterService.DeleteGameStateWhenGameIsOver:input_type -> DeleteGameStateWhenGameIsOverRequest
	6,  // 16: GeisterService.Start:output_type -> StartResponse
	8,  // 17: GeisterService.NotifyGamePreparationComplete:output_type -> NotifyGamePreparationCompleteResponse
	10, // 18: GeisterService.GetGameState:output_type -> GetGameStateResponse
	12, // 19: GeisterService.UpdateGameStateByPlayerMove:output_type -> UpdateGameStateByPlayerMoveResponse
	14, // 20: GeisterService.UpdateGameStateByCpuMove:output_type -> UpdateGameStateByCpuMoveResponse
	16, // 21: GeisterService.DeleteGameStateWhenGameIsOver:output_type -> DeleteGameStateWhenGameIsOverResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_geister_service_proto_init() }
func file_geister_service_proto_init() {
	if File_geister_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_geister_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Piece); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Block); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGamePreparationCompleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyGamePreparationCompleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGameStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameStateByPlayerMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameStateByPlayerMoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameStateByCpuMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateGameStateByCpuMoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGameStateWhenGameIsOverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_geister_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteGameStateWhenGameIsOverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_geister_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_geister_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_geister_service_proto_goTypes,
		DependencyIndexes: file_geister_service_proto_depIdxs,
		MessageInfos:      file_geister_service_proto_msgTypes,
	}.Build()
	File_geister_service_proto = out.File
	file_geister_service_proto_rawDesc = nil
	file_geister_service_proto_goTypes = nil
	file_geister_service_proto_depIdxs = nil
}
